{"version":3,"file":"rainCore.min.js","sources":["../src/reactivity/utils.ts","../src/reactivity/effect.ts","../src/reactivity/reactive.ts","../src/reactivity/ref.ts","../src/reactivity/watchEffect.ts","../src/reactivity/watch.ts","../src/reactivity/computed.ts","../src/runtime/utils.ts","../src/runtime/vnode.ts","../src/runtime/component.ts","../src/runtime/scheduler.ts","../src/runtime/mount.ts","../src/runtime/process.ts","../src/runtime/unmount.ts","../src/runtime/patch.ts","../src/runtime/render.ts","../src/runtime/createApp.ts"],"sourcesContent":["/* reactive 响应式标识 */\r\nexport const IS_REACTIVE: string = '__isReactive'\r\n/* reactive 响应式标识 */\r\nexport const IS_REF: string = '__isRef'\r\n/* 代理前对象标识 */\r\nexport const RAW: string = '__raw'\r\n\r\n/* 判断是否是对象 */\r\nexport function isObject(target: any) {\r\n    return typeof target === 'object' && target != null\r\n}\r\n\r\n/* 判断是否是数组 */\r\nexport function isArray(target: any) {\r\n    return Array.isArray(target)\r\n}\r\n\r\n/* 判断是否是函数 */\r\nexport function isFunction(target: any) {\r\n    return typeof target === 'function' && target != null\r\n}\r\n\r\n/* 判断是否是 reactive 响应式对象 */\r\nexport function isReactive(target: any) {\r\n    return !!(target && target[IS_REACTIVE])\r\n\r\n}\r\n\r\n/* 判断是否是 ref 响应式对象 */\r\nexport function isRef(value: any) {\r\n    return !!(value && value[IS_REF])\r\n}\r\n\r\n/* 判断两个值是否一致 */\r\nexport function hasChanged(oldValue: any, newValue: any) {\r\n    return oldValue !== newValue && !(Number.isNaN(oldValue) || Number.isNaN(newValue))\r\n}","const effectStack: any = []\r\n/* 暴露依赖 */\r\nlet activeEffect: any\r\n\r\nfunction effect(func: Function, options: any = {}): Function {\r\n    const effectFn = () => {\r\n        try {\r\n            effectStack.push(effectFn)\r\n            activeEffect = effectFn\r\n            return func()\r\n        } finally {\r\n            effectStack.pop()\r\n            activeEffect = effectStack[effectStack.length - 1]\r\n        }\r\n    }\r\n    /* 是否先执行一次 */\r\n    if (!options.lazy) effectFn()\r\n\r\n    effectFn.scheduler = options.scheduler\r\n\r\n    return effectFn\r\n}\r\n\r\n/* 收集依赖 */\r\nconst targetMap: WeakMap<object, any> = new WeakMap()\r\n\r\nfunction track(target: any, key: string | symbol): void {\r\n    /* 是否有依赖需要收集 没有直接发返回 */\r\n    if (!activeEffect) return\r\n    /* \r\n        查找是否有此响应式数据对应的依赖组 \r\n        如果没有为该数据创建 Map \r\n    */\r\n    let depsMap = targetMap.get(target)\r\n    if (!depsMap) targetMap.set(target, (depsMap = new Map()))\r\n    /* \r\n        查找是否有此响应式数据内数据的依赖组 \r\n        如果没有为该数据创建 Set \r\n    */\r\n    let deps = depsMap.get(key)\r\n    if (!deps) depsMap.set(key, (deps = new Set()))\r\n    /* 把用到此数据的依赖挂载到 effectFn 上 提供删除 */\r\n    activeEffect.deps = deps\r\n    /* 添加依赖 */\r\n    deps.add(activeEffect)\r\n}\r\n\r\n/* 触发依赖 */\r\nfunction trigger(target: any, key: string | symbol, value?: any): void {\r\n    const depsMap = targetMap.get(target)\r\n    /* \r\n        查找是否有此响应式数据对应的依赖组 \r\n        没有就直接返回\r\n    */\r\n    if (!depsMap) return\r\n    /* \r\n       查找是否有此响应式数据内数据的依赖组 \r\n       没有就直接返回\r\n    */\r\n    const deps = depsMap.get(key)\r\n    if (!deps) return\r\n    /* 触发依赖 */\r\n    deps.forEach((effect: { (): any; scheduler: (effect: any, value: any) => any }) => {\r\n        /* 有调度 scheduler 优先触发 scheduler */\r\n        effect.scheduler ? effect.scheduler(effect, value) : effect()\r\n    })\r\n}\r\n\r\nexport { effect, track, trigger, targetMap }","import { IS_REACTIVE, RAW, isObject, isArray, isReactive, hasChanged } from './utils'\r\nimport { track, trigger } from './effect'\r\n\r\n/* 保存响应式对象 */\r\nconst reactiveMap = new WeakMap()\r\n\r\nfunction reactive(target: any) {\r\n    /* 如果不是对象直接返回 */\r\n    if (!isObject(target)) return target\r\n    /* 是否已经是响应式对象 如果是直接返回 */\r\n    if (isReactive(target)) return target\r\n    /* 如果对象已经做过响应式 就直接返沪响应式对象 */\r\n    if (reactiveMap.has(target)) return reactiveMap.get(target)\r\n    /* 创建响应式对象 */\r\n    return createReactiveObject(target)\r\n}\r\n\r\n/* 提供一个响应式对象，返回原始对象 */\r\nfunction toRaw(target: any) {\r\n    if (isReactive(target)) return target[RAW]\r\n}\r\n\r\nfunction createReactiveObject(target: any) {\r\n    const raw = target\r\n    const proxy: any = new Proxy(target, {\r\n        get(target, key, receiver) {\r\n            /* 判断是否是响应式对象 */\r\n            if (key === IS_REACTIVE) return true\r\n            /* 获取原对象 */\r\n            if (key === RAW) return raw\r\n\r\n            const result = Reflect.get(target, key, receiver)\r\n            /* 收集依赖 */\r\n            track(target, key)\r\n            /* 返回值 */\r\n            return isObject(result) ? reactive(result) : result\r\n        },\r\n        set(target, key, value, receiver) {\r\n            /* 获取旧值 */\r\n            const oldValue = target[key]\r\n            const oldLength = target.length\r\n\r\n            const result = Reflect.set(target, key, value, receiver)\r\n            /* 判断新值和旧值是否不一样 */\r\n            if (hasChanged(oldValue, value)) {\r\n                /* 触发依赖 */\r\n                trigger(target, key, value)\r\n                /* 如果是数组 判断是否依赖长度 是 判断是否改变 改变触发依赖 */\r\n                if (isArray(target) && target.length !== oldLength) trigger(target, 'length')\r\n            }\r\n            return result\r\n        }\r\n    })\r\n    /* 添加记录 */\r\n    reactiveMap.set(target, proxy)\r\n    return proxy\r\n}\r\n\r\nexport { reactive, toRaw }","import { isObject, isRef, hasChanged } from './utils'\r\nimport { reactive } from './reactive'\r\nimport { track, trigger } from './effect'\r\n\r\nfunction ref(value: any) {\r\n    /* 是否已经是响应式对象 如果是直接返回 */\r\n    if (isRef(value)) return value\r\n    /* 创建响应式对象 */\r\n    return new refImpl(value)\r\n}\r\n\r\nclass refImpl {\r\n    private __rawValue: any\r\n    private __isRef: boolean\r\n    private _value: any\r\n    /* \r\n        都是基础类型  __rawValue 和 _value 相等\r\n        如果是对象 \r\n            __rawValue：原始对象\r\n            _value：响应式对象\r\n    */\r\n    constructor(value: any) {\r\n        this.__isRef = true\r\n        this.__rawValue = value\r\n        this._value = convert(value)\r\n    }\r\n\r\n    get value() {\r\n        /* 收集依赖 */\r\n        track(this, 'value')\r\n        /* 返回值 */\r\n        return this._value\r\n    }\r\n\r\n    set value(value) {\r\n        if (hasChanged(this._value, value)) {\r\n            /* 更新数据 */\r\n            this._value = convert(value)\r\n            this.__rawValue = value\r\n            /* 触发依赖 */\r\n            trigger(this, 'value', value)\r\n        }\r\n    }\r\n}\r\n\r\nfunction convert(value: any) {\r\n    return isObject(value) ? reactive(value) : value\r\n}\r\n\r\n/* 自动判断是否是 ref 并且获取值 不是 旧返回参数 */\r\nfunction unRef(ref: any) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\n\r\nexport { ref, unRef }","import { effect } from './effect'\r\n\r\n/* 返回一个函数 调用 停止监听 */\r\nfunction watchEffect(func: Function): Function {\r\n    let effectFn: any = effect(func)\r\n    const deps = effectFn.deps\r\n    return function () {\r\n        deps.delete(effectFn)\r\n        effectFn = null\r\n    }\r\n}\r\n\r\nexport { watchEffect }","import { isRef } from './utils'\r\nimport { effect } from './effect'\r\n\r\nfunction watch(getter: any, func: Function): Function {\r\n    let _value = isRef(getter) ? getter.value : getter()\r\n\r\n    let effectFn: any = effect(() => isRef(getter) ? getter.value : getter(), {\r\n        scheduler: (effect: any, value: any) => {\r\n            func(value, _value)\r\n            _value = value\r\n        }\r\n    })\r\n    const deps = effectFn.deps\r\n    return function () {\r\n        deps.delete(effectFn)\r\n        effectFn = null\r\n        _value = null\r\n    }\r\n}\r\n\r\nexport { watch }","import { track, trigger, effect } from './effect'\r\nimport { isFunction } from './utils'\r\n\r\nfunction computed(getterOrOptions: any): ComputedRefImpl {\r\n    let getter, setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions\r\n        setter = () => {\r\n            console.warn('Write operation failed: computed value is readonly')\r\n        }\r\n    } else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter)\r\n}\r\n\r\nclass ComputedRefImpl {\r\n    private _setter: Function\r\n    private _value: any\r\n    private _dirty: boolean\r\n    private effect: any\r\n    constructor(getter: Function, setter: Function) {\r\n        this._setter = setter\r\n        /* 缓存结果 */\r\n        this._value = undefined\r\n        /* 判断依赖值是否改变 */\r\n        this._dirty = true\r\n        /* 监听依赖变化 */\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true\r\n                    /* 触发依赖 */\r\n                    trigger(this, 'value', this._value)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    get value() {\r\n        if (this._dirty) {\r\n            this._value = this.effect()\r\n            this._dirty = false\r\n            /* 收集依赖 */\r\n            track(this, 'value')\r\n        }\r\n        return this._value\r\n    }\r\n\r\n    set value(value) {\r\n        this._setter(value)\r\n    }\r\n}\r\n\r\nexport { computed }","/* vNode 类型 */\r\nexport type vNode = {\r\n    /* 类型 */\r\n    type: string | Symbol | object,\r\n    /* 属性 */\r\n    props: object | null,\r\n    /* 孩子 */\r\n    children: string | number | [] | null,\r\n    /* 类型标签 */\r\n    shapeFlag: number,\r\n    /* DOM 节点 */\r\n    elm: HTMLElement | Text | null,\r\n    /* Fragment 专属属性 anchor */\r\n    anchor: Text | null,\r\n    /* key */\r\n    key: string | null,\r\n    /* 组件的实例 */\r\n    component: object | null\r\n}\r\n\r\n/* 组件实例类型 */\r\nexport type instance = {\r\n    /* 接收夫组件传递的数据 */\r\n    props: object | null,\r\n    /* vNode 上的属性 */\r\n    attrs: object | null,\r\n    /* setup 函数返回对象 */\r\n    setupState: object | null,\r\n    /* ctx 渲染函数参数 */\r\n    ctx: object | null,\r\n    /* 渲染函数 */\r\n    update: object | null,\r\n    /* 组件是否挂载 */\r\n    isMounted: boolean,\r\n    /* render 函数 返回结果 */\r\n    subTree: object | null,\r\n    /* 组件更新时，把新 vNode暂放在这里 */\r\n    next: object | null\r\n}\r\n\r\n/* vNode 类型判断 使用位运算 可以提高效率 */\r\nexport const ShapeFlags = {\r\n    ELEMENT: 1, // 00000001 元素\r\n    TEXT: 1 << 1, // 00000010 文本\r\n    FRAGMENT: 1 << 2, // 00000100 容器\r\n    COMPONENT: 1 << 3, // 00001000 组件\r\n    TEXT_CHILDREN: 1 << 4, // 00010000 string 孩子\r\n    ARRAY_CHILDREN: 1 << 5, // 00100000 数组 孩子\r\n    CHILDREN: (1 << 4) | (1 << 5), //00110000 孩子\r\n}\r\n\r\n/* 文本唯一标识 */\r\nexport const Text = Symbol('Text')\r\n\r\n/* 容器唯一标识 */\r\nexport const Fragment = Symbol('Fragment')\r\n\r\n/* 判断是否是字符串 */\r\nexport function isString(target: any) {\r\n    return typeof target === 'string'\r\n}\r\n\r\n/* 判断是否是字符串 */\r\nexport function isNumber(target: any) {\r\n    return typeof target === 'number'\r\n}\r\n\r\n/* 判断是否是对象 */\r\nexport function isObject(target: any) {\r\n    return typeof target === 'object' && target != null\r\n}\r\n\r\n/* 判断是否是字符串 */\r\nexport function isArray(target: any) {\r\n    return Array.isArray(target)\r\n}\r\n\r\n/* 判断是否是同类型的vNode */\r\nexport function isSameVNode(n1: vNode, n2: vNode) {\r\n    return n1.type === n2.type\r\n}\r\n\r\n/* 判断孩子是否都有key */\r\nexport function isChildrenKey(c1: [], c2: []) {\r\n    let c1True = 0, c2True = 0\r\n    c1.forEach(c => {\r\n        if (c && c['key'] != null) c1True++\r\n    })\r\n    c2.forEach(c => {\r\n        if (c && c['key'] != null) c2True++\r\n    })\r\n    return c1True === c1.length && c2True === c2.length\r\n}\r\n\r\n/* 判断 vNode 类型 */\r\nexport function vNodeType(type: string | Symbol | object): number {\r\n    /* 判断是否是标签 */\r\n    if (isString(type)) return ShapeFlags.ELEMENT\r\n    /* 判断是否是文本 */\r\n    if (type === Text) return ShapeFlags.TEXT\r\n    /* 是否是容器 */\r\n    if (type === Fragment) return ShapeFlags.FRAGMENT\r\n    /* 是否是组件 */\r\n    return ShapeFlags.COMPONENT\r\n}\r\n\r\n/* dom 属性正则 */\r\nexport const domPropsRE = /[A-Z]|^(value|checked|selected|muted|disabled)$/\r\n\r\n/* 最长上升子序列算法 */\r\nexport function getSequence(numberArray: []) {\r\n    const result: any = [];\r\n    const position = [];\r\n    for (let i = 0; i < numberArray.length; i++) {\r\n        if (numberArray[i] === -1) {\r\n            continue;\r\n        }\r\n        // result[result.length - 1]可能为undefined，此时numberArray[i] > undefined为false\r\n        if (numberArray[i] > result[result.length - 1]) {\r\n            result.push(numberArray[i]);\r\n            position.push(result.length - 1);\r\n        } else {\r\n            let l = 0,\r\n                r = result.length - 1;\r\n            while (l <= r) {\r\n                const mid = ~~((l + r) / 2);\r\n                if (numberArray[i] > result[mid]) {\r\n                    l = mid + 1;\r\n                } else if (numberArray[i] < result[mid]) {\r\n                    r = mid - 1;\r\n                } else {\r\n                    l = mid;\r\n                    break;\r\n                }\r\n            }\r\n            result[l] = numberArray[i];\r\n            position.push(l);\r\n        }\r\n    }\r\n    let cur = result.length - 1;\r\n    for (let i = position.length - 1; i >= 0 && cur >= 0; i--) {\r\n        if (position[i] === cur) {\r\n            result[cur--] = i;\r\n        }\r\n    }\r\n    return result;\r\n}","import { vNode, isString, isNumber, isArray, ShapeFlags, vNodeType, Fragment, Text, isObject } from './utils'\r\n\r\nfunction h(type: string | Symbol | object, props: object | null, children: string | number | [] | null): vNode {\r\n    let shapeFlag: number = vNodeType(type)\r\n\r\n    /* 判断 孩子 是否是 字符串 或者 数字 */\r\n    if (isString(children) || isNumber(children)) {\r\n        /* 用位或运算整合 */\r\n        shapeFlag |= ShapeFlags.TEXT_CHILDREN\r\n        children = children!.toString()\r\n    }\r\n\r\n    /* 判断 孩子 是否是 数组 */\r\n    if (isArray(children)) {\r\n        /* 用位或运算整合 */\r\n        shapeFlag |= ShapeFlags.ARRAY_CHILDREN\r\n    }\r\n\r\n    return { type, props, children, shapeFlag, elm: null, anchor: null, key: props && (props as any).key, component: null }\r\n}\r\n\r\n/* render 返回值 二次处理 */\r\nfunction normalizeVNode(result: any) {\r\n    /* 数组 用 Fragment 包起来 */\r\n    if (Array.isArray(result)) {\r\n        return h(Fragment, null, result as any);\r\n    }\r\n    /* 对象 直接返回 */\r\n    if (isObject(result)) {\r\n        return result;\r\n    }\r\n    /* 字符串 或 数组 文Text 包起来 */\r\n    return h(Text, null, result.toString());\r\n}\r\n\r\nexport { h, normalizeVNode }","import { instance, vNode } from './utils'\r\nimport { reactive } from '../reactivity/index'\r\n\r\n/* 初始化 Props 不接的 当成 attrs属性 处理 */\r\nfunction initProps(instance: instance, vNode: vNode) {\r\n    const { type: Component, props: vNodeProps } = vNode\r\n    const props: any = (instance.props = {})\r\n    const attrs: any = (instance.attrs = {})\r\n    for (const key in vNodeProps) {\r\n        if ((Component as any).props?.includes(key)) {\r\n            props[key] = (vNodeProps as any)[key];\r\n        } else {\r\n            attrs[key] = (vNodeProps as any)[key];\r\n        }\r\n    }\r\n    /* props 设置成 响应式 */\r\n    instance.props = reactive(instance.props)\r\n}\r\n\r\nfunction fallThrough(instance: instance, subTree: vNode) {\r\n    if (Object.keys((instance as any).attrs).length) {\r\n        subTree.props = {\r\n            ...subTree.props,\r\n            ...instance.attrs,\r\n        };\r\n    }\r\n}\r\n\r\nfunction updateComponent(n1: vNode | null, n2: vNode) {\r\n    n2.component = n1!.component;\r\n    (n2.component as any).next = n2;\r\n    (n2.component as any).update()\r\n}\r\n\r\nexport { initProps, fallThrough, updateComponent }","/* 更新队列 */\r\nconst queue: any = []\r\n/* 是否正在更新 */\r\nlet isFlushing = false\r\n/* 使用微任务更新 */\r\nconst resolePromise = Promise.resolve()\r\nlet currentFlushingPromise: Promise<void> | null = null\r\n\r\n/* 给队列添加事件 */\r\nfunction queueJob(job: any) {\r\n    if (!queue.length || !queue.includes(job)) {\r\n        queue.push(job)\r\n        queueFlushJob()\r\n    }\r\n}\r\n\r\n/* 在微任务中执行事件 */\r\nfunction queueFlushJob() {\r\n    if (!isFlushing) {\r\n        isFlushing = true\r\n        currentFlushingPromise = resolePromise.then(flushJobs)\r\n    }\r\n}\r\n\r\nfunction flushJobs() {\r\n    try {\r\n        for (let i = 0; i < queue.length; i++) {\r\n            queue[i]()\r\n        }\r\n    } finally {\r\n        queue.length = 0\r\n        currentFlushingPromise = null\r\n        isFlushing = false\r\n    }\r\n}\r\n\r\n/* 将回调推迟到下一个 DOM 更新周期之后执行 */\r\nfunction nextTick(func: Function) {\r\n    const p = currentFlushingPromise || resolePromise\r\n    return func ? p.then(func as any) : p\r\n}\r\n\r\nexport { queueJob, nextTick }","import { vNode, instance, ShapeFlags } from './utils'\r\nimport { patch, patchProps } from './patch'\r\nimport { initProps, fallThrough } from './component'\r\nimport { effect } from '../reactivity/effect'\r\nimport { normalizeVNode } from './vnode'\r\nimport { queueJob } from './scheduler'\r\n\r\n/* 挂载元素 */\r\nfunction mountElement(vNode: vNode, container: HTMLElement, anchor?: Text) {\r\n    const { type, props, shapeFlag, children } = vNode\r\n    const el = document.createElement(type as string)\r\n    if (props) patchProps(null, props, el)\r\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) el.textContent = vNode.children as string\r\n    if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) mountChildren(children as [], el)\r\n    vNode.elm = el\r\n    container.insertBefore(el, anchor as Text)\r\n}\r\n\r\n/* 挂载文本 */\r\nfunction mountTextNode(vNode: vNode, container: HTMLElement, anchor?: Text) {\r\n    const textNode = document.createTextNode(vNode.children as string)\r\n    vNode.elm = textNode\r\n    container.insertBefore(textNode, anchor as Text)\r\n}\r\n\r\n/* 挂载孩子 */\r\nfunction mountChildren(children: [], container: HTMLElement, anchor?: Text) {\r\n    children.forEach(child => {\r\n        patch(null, child, container, anchor!)\r\n    })\r\n}\r\n\r\n/* 挂载组件 */\r\nfunction mountComponent(vNode: vNode, container: HTMLElement, anchor?: Text) {\r\n    const { type: Component } = vNode\r\n    /* 实例模板 */\r\n    const instance: instance = (vNode.component = {\r\n        props: {},\r\n        attrs: {},\r\n        setupState: null,\r\n        ctx: null,\r\n        update: null,\r\n        isMounted: false,\r\n        subTree: null,\r\n        next: null\r\n    })\r\n    /* 初始化 Props */\r\n    initProps(instance, vNode)\r\n    /* 运行 setup */\r\n    instance.setupState = (Component as any).setup?.(instance.props, {\r\n        attrs: instance.attrs\r\n    })\r\n    /* 设置 ctx */\r\n    instance.ctx = { ...instance.props, ...instance.setupState }\r\n    /* 设置渲染函数 */\r\n    instance.update = effect(\r\n        () => {\r\n            /* 判断是否未挂载 */\r\n            if (!instance.isMounted) {\r\n                const subTree: vNode = (instance.subTree = normalizeVNode(\r\n                    (Component as any).render(instance.ctx)\r\n                ))\r\n                /* 设置 subTree 的 props 属性 */\r\n                fallThrough(instance, subTree)\r\n                /* 挂载组件 */\r\n                patch(null, subTree, container, anchor)\r\n                instance.isMounted = true\r\n                vNode.elm = subTree.elm\r\n            } else {\r\n                // instance.next存在，代表是被动更新。否则是主动更新\r\n                if (instance.next) {\r\n                    (vNode as any) = instance.next\r\n                    instance.next = null\r\n                    initProps(instance, vNode)\r\n                    instance.ctx = { ...instance.props, ...instance.setupState, }\r\n                }\r\n                /* 获取上一次 render 返回的 vNode */\r\n                const prev: any = instance.subTree\r\n                const subTree = (instance.subTree = normalizeVNode(\r\n                    (Component as any).render(instance.ctx)\r\n                ))\r\n                /* 设置 subTree 的 props 属性 */\r\n                fallThrough(instance, subTree)\r\n                /* 对比 两次 render 返回的 vNode*/\r\n                patch(prev, subTree, container, anchor)\r\n                vNode.elm = subTree.elm\r\n            }\r\n        }, {\r\n        scheduler: queueJob\r\n    })\r\n}\r\n\r\nexport { mountElement, mountTextNode, mountChildren, mountComponent }","import { vNode } from './utils'\r\nimport { patchElement, patchChildren } from './patch'\r\nimport { mountElement, mountTextNode, mountChildren, mountComponent } from './mount'\r\nimport { updateComponent } from './component'\r\n\r\n/* 处理组件 */\r\nfunction processComponent(n1: vNode | null, n2: vNode, container: HTMLElement, anchor?: Text) {\r\n    if (n1) {\r\n        updateComponent(n1, n2)\r\n    } else {\r\n        mountComponent(n2, container, anchor)\r\n    }\r\n}\r\n\r\n/* 处理容器 */\r\nfunction processFragment(n1: vNode | null, n2: vNode, container: HTMLElement, anchor?: Text) {\r\n    const fragmentStartAnchor = n2.elm = n1 ? n1!.elm : document.createTextNode('')\r\n    const fragmentEndAnchor = n2.anchor = n1 ? n1!.anchor : document.createTextNode('')\r\n\r\n    if (n1) {\r\n        patchChildren(n1, n2, container, fragmentEndAnchor as Text)\r\n    } else {\r\n        container.insertBefore(fragmentStartAnchor as Text, anchor as Text)\r\n        container.insertBefore(fragmentEndAnchor as Text, anchor as Text)\r\n        mountChildren(n2.children as [], container, fragmentEndAnchor as Text)\r\n    }\r\n}\r\n\r\n/* 处理文本 */\r\nfunction processText(n1: vNode | null, n2: vNode, container: HTMLElement, anchor?: Text) {\r\n    if (n1) {\r\n        if (n1.elm?.textContent !== n2.children) (n1 as any).elm.textContent = n2.children\r\n        n2.elm = n1.elm\r\n    } else {\r\n        mountTextNode(n2, container, anchor)\r\n    }\r\n}\r\n\r\n/* 处理元素 */\r\nfunction processElement(n1: vNode | null, n2: vNode, container: HTMLElement, anchor?: Text) {\r\n    if (n1) {\r\n        patchElement(n1, n2)\r\n    } else {\r\n        mountElement(n2, container, anchor)\r\n    }\r\n}\r\n\r\nexport { processComponent, processFragment, processText, processElement } ","import { vNode, ShapeFlags } from './utils'\r\n\r\n/* 卸载 vNode */\r\nfunction unmount(vNode: vNode) {\r\n    const { shapeFlag } = vNode\r\n    if (shapeFlag & ShapeFlags.COMPONENT) {\r\n        unmountComponent(vNode)\r\n    } else if (shapeFlag & ShapeFlags.FRAGMENT) {\r\n        unmountFragment(vNode)\r\n    } else {\r\n        unmountElementOrText(vNode)\r\n    }\r\n}\r\n\r\n/* 卸载组件 */\r\nfunction unmountComponent(vNode: vNode) {\r\n    unmount((vNode.component as any).subTree)\r\n}\r\n\r\n/* 卸载容器 */\r\nfunction unmountFragment(vNode: vNode) {\r\n    let { elm: cur, anchor: end } = vNode\r\n    const parentNode = cur!.parentNode\r\n    while (cur !== end) {\r\n        const next = cur!.nextSibling\r\n        parentNode!.removeChild(cur!);\r\n        (cur as any) = next\r\n    }\r\n    parentNode!.removeChild(end!)\r\n}\r\n\r\n/* 卸载元素或文本 */\r\nfunction unmountElementOrText(vNode: vNode) {\r\n    const { elm } = vNode\r\n    elm!.parentNode!.removeChild(elm as HTMLElement | Text)\r\n}\r\n\r\n/* 卸载孩子 */\r\nfunction unmountChildren(children: []) {\r\n    children.forEach(child => {\r\n        unmount(child)\r\n    })\r\n}\r\n\r\nexport { unmount, unmountChildren }","import { vNode, isSameVNode, ShapeFlags, domPropsRE, isChildrenKey, getSequence } from \"./utils\"\r\nimport { processComponent, processFragment, processText, processElement } from './process'\r\nimport { unmount, unmountChildren } from './unmount'\r\nimport { mountChildren } from './mount'\r\n\r\nfunction patch(n1: vNode | null, n2: vNode, container: HTMLElement, anchor?: Text) {\r\n    if (n1 && !isSameVNode(n1, n2)) {\r\n        /* n1被卸载后，n2将会创建，因此anchor至关重要。需要将它设置为n1的下一个兄弟节点 */\r\n        (anchor as any) = (n1.anchor || n1.elm)!.nextSibling\r\n        unmount(n1)\r\n        n1 = null\r\n    }\r\n    const { shapeFlag } = n2\r\n    /* 判断 n2 是否是组件 */\r\n    if (shapeFlag & ShapeFlags.COMPONENT) processComponent(n1, n2, container, anchor)\r\n    /* 判断 n2 是否是文本 */\r\n    if (shapeFlag & ShapeFlags.TEXT) processText(n1, n2, container, anchor)\r\n    /* 判断 n2 是否是元素 */\r\n    if (shapeFlag & ShapeFlags.FRAGMENT) processFragment(n1, n2, container, anchor)\r\n    /* 判断 n2 是否是容器 */\r\n    if (shapeFlag & ShapeFlags.ELEMENT) processElement(n1, n2, container, anchor)\r\n}\r\n\r\n/* 更新元素 */\r\nfunction patchElement(n1: vNode | null, n2: vNode) {\r\n    n2.elm = n1!.elm\r\n    patchProps(n1!.props as object, n2.props as object, n2.elm as HTMLElement)\r\n    patchChildren(n1, n2, n2.elm as HTMLElement)\r\n}\r\n\r\n/* 更新属性 */\r\nfunction patchProps(oldProps: object | null, newProps: object | null, container: HTMLElement) {\r\n    if (oldProps === newProps) return\r\n    oldProps = oldProps || {}\r\n    newProps = newProps || {}\r\n    for (const key in newProps) {\r\n        if (key === 'key') continue\r\n        const prev = (oldProps as any)[key]\r\n        const next = (newProps as any)[key]\r\n        if (prev !== next) {\r\n            patchDomProp(container, key, prev, next)\r\n        }\r\n    }\r\n    for (const key in oldProps) {\r\n        if (key !== 'key' && !(key in newProps)) {\r\n            patchDomProp(container, key, (oldProps as any)[key], null)\r\n        }\r\n    }\r\n}\r\n\r\n/* 更新 DOM 属性 */\r\nfunction patchDomProp(el: HTMLElement, key: string, prev: string | object, next: string | object | null) {\r\n    switch (key) {\r\n        case 'class':\r\n            // 暂时认为class就是字符串\r\n            // next可能为null，会变成'null'，因此要设成''\r\n            el.className = next as string || ''\r\n            break\r\n        case 'style':\r\n            // style为对象\r\n            if (!next) {\r\n                el.removeAttribute('style')\r\n            } else {\r\n                for (const styleName in next as object) {\r\n                    (el.style as any)[styleName] = (next as any)[styleName]\r\n                }\r\n                if (prev) {\r\n                    for (const styleName in prev as object) {\r\n                        if ((next as any)[styleName] == null) {\r\n                            (el.style as any)[styleName] = ''\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            break\r\n        default:\r\n            if (/^on[^a-z]/.test(key)) {\r\n                // 事件\r\n                if (prev !== next) {\r\n                    const eventName = key.slice(2).toLowerCase()\r\n                    if (prev) {\r\n                        (el.removeEventListener as any)(eventName, prev)\r\n                    }\r\n                    if (next) {\r\n                        (el.addEventListener as any)(eventName, next)\r\n                    }\r\n                }\r\n            } else if (domPropsRE.test(key)) {\r\n                if (next === '' && typeof (el as any)[key] === 'boolean') {\r\n                    (next as any) = true\r\n                }\r\n                (el as any)[key] = next\r\n            } else {\r\n                // 例如自定义属性{custom: ''}，应该用setAttribute设置为<input custom />\r\n                // 而{custom: null}，应用removeAttribute设置为<input />\r\n                if (next == null || next as any === false) {\r\n                    el.removeAttribute(key)\r\n                } else {\r\n                    el.setAttribute(key, (next as any))\r\n                }\r\n            }\r\n            break\r\n    }\r\n}\r\n\r\n/* 更新孩子 */\r\nfunction patchChildren(n1: vNode | null, n2: vNode, container: HTMLElement, anchor?: Text) {\r\n    const { shapeFlag: prevShapeFlag, children: c1 } = n1!\r\n    const { shapeFlag, children: c2 } = n2\r\n\r\n    /* 新 vNode 孩子是 文本 */\r\n    if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\r\n        /* 旧 vNode 孩子是 数组  卸载孩子*/\r\n        if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) unmountChildren(c1 as [])\r\n        /* 如果 新旧孩子文本内容不一致 文本内容设置为 新孩子    PS：旧 vNode 孩子是 数组 testContent 是 null */\r\n        if (c2 !== c1) container.textContent = c2 as string | null\r\n\r\n        /* 新 vNode 孩子是 数组 */\r\n    } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n        /* 旧 vNode 孩子是 数组*/\r\n        if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) {\r\n            /* 判断是否有key 调用不同的 diff 算法 */\r\n            if (isChildrenKey(c1 as [], c2 as [])) {\r\n                /* 有 key 时 */\r\n                patchKeyedChildren(c1 as [], c2 as [], container, anchor)\r\n            } else {\r\n                /* 无 key 时 */\r\n                patchUnKeyedChildren(c1 as [], c2 as [], container, anchor)\r\n            }\r\n        } else {\r\n            /* 旧 vNode 孩子是 文本 或 null */\r\n            container.textContent = null\r\n            mountChildren(c2 as [], container, anchor)\r\n        }\r\n\r\n        /* 新 vNode 孩子是 null */\r\n    } else {\r\n        /* 旧 vNode 孩子是 文本 */\r\n        if (prevShapeFlag & ShapeFlags.TEXT_CHILDREN) container.textContent = null\r\n        /* 旧 vNode 孩子是 数组 */\r\n        if (prevShapeFlag & ShapeFlags.ARRAY_CHILDREN) unmountChildren(c1 as [])\r\n    }\r\n}\r\n\r\n/* 有 key 时 使用的 diff 算法 */\r\nfunction patchKeyedChildren(c1: [], c2: [], container: HTMLElement, anchor?: Text) {\r\n    let start = 0, e1 = c1.length - 1, e2 = c2.length - 1\r\n    /* 1. 从左向右对比 */\r\n    while (start <= e1 && start <= e2 && (c1[start] as any).key === (c2[start] as any).key) {\r\n        patch(c1[start], c2[start], container, anchor)\r\n        start++\r\n    }\r\n    /* 2. 从右向左对比 */\r\n    while (start <= e1 && start <= e2 && (c1 as any)[e1].key === (c2 as any)[e2].key) {\r\n        patch((c1 as any)[e1], (c2 as any)[e2], container, anchor)\r\n        e1--\r\n        e2--\r\n    }\r\n    /* 3.1 比对后 旧孩子 已无元素 */\r\n    if (start > e1) {\r\n        const nextPos = e2 + 1\r\n        const curAnchor = (c2[nextPos] && (c2[nextPos] as any).elm) || anchor\r\n        for (let i = start; i <= e2; i++) {\r\n            patch(null, c2[i], container, curAnchor)\r\n        }\r\n    }\r\n    /* 3.2 对比后 新孩子 已无元素 */\r\n    if (start > e2) {\r\n        for (let i = start; i <= e1; i++) {\r\n            unmount(c1[i])\r\n        }\r\n    }\r\n    /* 4. 对比后 新旧孩子 都还有元素 采用传统diff算法，但不真的添加和移动，只做标记和删除 */\r\n    if (start <= e1 && start <= e2) {\r\n        /* 记录旧孩子 查询使用 */\r\n        const map = new Map()\r\n        for (let i = start; i <= e1; i++) {\r\n            map.set((c1[i] as any).key, { prev: c1[i], index: i })\r\n        }\r\n        /* 旧孩子中上一个对比元素位置下标 */\r\n        let maxNewIndexSoFar = 0\r\n        /* 是否移动 开关 */\r\n        let move = false\r\n        /* 旧孩子中没有没有新孩子节点的下标 给未开启 move 使用 */\r\n        const toMounted = []\r\n        /* 初始化 sources 下标 数组 */\r\n        const sources = new Array(e2 - start + 1).fill(-1)\r\n        /* 查找新节点在旧节点的位置 并且 做标记 和 删除 map 中找到的元素 */\r\n        for (let i = 0; i < e2 - start + 1; i++) {\r\n            const nextPos: any = c2[i + start]\r\n            /* 判断 旧孩子 中是否有 新孩子的key */\r\n            if (map.has(nextPos.key)) {\r\n                const { prev, index } = map.get(nextPos.key);\r\n                /* 进行对比 */\r\n                patch(prev, nextPos, container, anchor)\r\n                /* 判断 当前位置是否需要移动  */\r\n                if (index < maxNewIndexSoFar) {\r\n                    move = true\r\n                } else {\r\n                    maxNewIndexSoFar = index\r\n                }\r\n                /* 设置 新旧孩子节点 下标对应关系 */\r\n                sources[i] = index\r\n                /* 删除 map 中对应的 key 值 */\r\n                map.delete(nextPos.key)\r\n            } else {\r\n                /* 旧孩子中未找到新孩子节点的下标存入 toMounted */\r\n                toMounted.push(i + start)\r\n            }\r\n        }\r\n        /* 删除 旧孩子 剩余元素 */\r\n        map.forEach(({ prev }) => {\r\n            unmount(prev)\r\n        })\r\n        /* 5. 移动开关开启时 移动元素操作 采用新的最长上升子序列算法 */\r\n        if (move) {\r\n            /* 最长上升子序列 下标数组 */\r\n            const sequence: any = getSequence(sources as any)\r\n            /* 数组最长下标 */\r\n            let length = sequence.length - 1\r\n            for (let i = sources.length - 1; i >= 0; i--) {\r\n                /* 下标符合 不做移动 */\r\n                if (i === sequence[length]) {\r\n                    length--\r\n                } else {\r\n                    const pos = i + start\r\n                    const nextPos = pos + 1;\r\n                    const curAnchor = (c2[nextPos] && (c2[nextPos] as any).elm) || anchor\r\n                    if (sources[i] === -1) {\r\n                        /* 旧孩子没有此节点 进行挂载 */\r\n                        patch(null, c2[pos], container, curAnchor)\r\n                    } else {\r\n                        /* 移动操作 */\r\n                        container.insertBefore((c2[pos] as any).elm, curAnchor)\r\n                    }\r\n                }\r\n            }\r\n            /* 6. 未开启 move 还有元素需要添加 情况 */\r\n        } else if (toMounted.length) {\r\n            for (let i = toMounted.length - 1; i >= 0; i++) {\r\n                const pos = toMounted[i]\r\n                const nextPos = pos + 1;\r\n                const curAnchor = (c2[nextPos] && (c2[nextPos] as any).elm) || anchor\r\n                patch(null, c2[pos], container, curAnchor)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/* 无 key 时 使用的 diff 算法 */\r\nfunction patchUnKeyedChildren(c1: [], c2: [], container: HTMLElement, anchor?: Text) {\r\n    const oldLength = c1.length\r\n    const newLength = c2.length\r\n    /* 选取最短的子数组 */\r\n    const commonLength = Math.min(oldLength, newLength)\r\n    /* 对比共同长度的子节点 */\r\n    for (let i = 0; i < commonLength; i++) {\r\n        patch(c1[i], c2[i], container, anchor)\r\n    }\r\n    /* 新孩子 多于 旧孩子 剩下部分 挂载孩子 */\r\n    if (newLength > oldLength) mountChildren(c2.slice(commonLength) as [], container, anchor)\r\n    /* 旧孩子 多于 新孩子 剩下部分 卸载孩子 */\r\n    if (newLength < oldLength) unmountChildren(c1.slice(commonLength) as [])\r\n\r\n}\r\n\r\nexport { patch, patchElement, patchProps, patchChildren }","import { vNode } from './utils'\r\nimport { patch } from './patch'\r\nimport { unmount } from './unmount'\r\n\r\n/* 渲染函数 */\r\nfunction render(vNode: vNode | null, container: HTMLElement) {\r\n    const pervVNode = (container as any)._vNode\r\n    /*  判断是否传入新的vNode */\r\n    if (vNode) {\r\n        /* 进行 diff 算法 */\r\n        patch(pervVNode, vNode, container)\r\n    } else {\r\n        /* 没有传入新的 vNode 且有旧的 vNode 卸载旧 vNode */\r\n        if (pervVNode) unmount(pervVNode)\r\n    }\r\n    (container as any)._vNode = vNode\r\n}\r\n\r\nexport { render }","import { isString } from './utils'\r\nimport { h } from './vnode'\r\nimport { render } from './render'\r\n\r\nfunction createApp(component: object) {\r\n    return {\r\n        mount(container: any) {\r\n            if (isString(container)) container = document.querySelector(container as string)\r\n            render(h(component, null, null), container)\r\n        }\r\n    }\r\n}\r\n\r\nexport { createApp }"],"names":["IS_REACTIVE","IS_REF","RAW","isObject","target","isArray","Array","isFunction","isReactive","isRef","value","hasChanged","oldValue","newValue","Number","isNaN","effectStack","activeEffect","effect","func","options","effectFn","push","pop","length","lazy","scheduler","targetMap","WeakMap","track","key","depsMap","get","set","Map","deps","Set","add","trigger","forEach","reactiveMap","reactive","has","createReactiveObject","toRaw","raw","proxy","Proxy","receiver","result","Reflect","oldLength","ref","refImpl","constructor","__isRef","__rawValue","_value","convert","unRef","watchEffect","delete","watch","getter","computed","getterOrOptions","setter","console","warn","ComputedRefImpl","_setter","undefined","_dirty","ShapeFlags","ELEMENT","TEXT","FRAGMENT","COMPONENT","TEXT_CHILDREN","ARRAY_CHILDREN","CHILDREN","Text","Symbol","Fragment","isString","isNumber","isSameVNode","n1","n2","type","isChildrenKey","c1","c2","c1True","c2True","c","vNodeType","domPropsRE","getSequence","numberArray","position","i","l","r","mid","cur","h","props","children","shapeFlag","toString","elm","anchor","component","normalizeVNode","initProps","instance","vNode","Component","vNodeProps","attrs","includes","fallThrough","subTree","Object","keys","updateComponent","next","update","queue","isFlushing","resolePromise","Promise","resolve","queueJob","job","queueFlushJob","currentFlushingPromise","then","flushJobs","mountElement","container","el","document","createElement","patchProps","textContent","mountChildren","insertBefore","mountTextNode","textNode","createTextNode","child","patch","mountComponent","setupState","ctx","isMounted","setup","render","prev","processComponent","processFragment","fragmentStartAnchor","fragmentEndAnchor","patchChildren","processText","processElement","patchElement","unmount","unmountComponent","unmountFragment","unmountElementOrText","end","parentNode","nextSibling","removeChild","unmountChildren","oldProps","newProps","patchDomProp","className","removeAttribute","styleName","style","test","eventName","slice","toLowerCase","removeEventListener","addEventListener","setAttribute","prevShapeFlag","patchKeyedChildren","patchUnKeyedChildren","start","e1","e2","nextPos","curAnchor","map","index","maxNewIndexSoFar","move","toMounted","sources","fill","sequence","pos","newLength","commonLength","Math","min","pervVNode","_vNode","createApp","mount","querySelector"],"mappings":"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"}